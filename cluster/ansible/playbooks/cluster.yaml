- name: Base
  hosts: all
  become: true
  # become_user: janitor

  roles:
    - role: user-management
      become: true
      become_method: sudo
      become_user: root
    - role: required-packages
    - role: ssh-config
    - role: ip-forward
    - role: tailscale
      vars:
        tailscale_install: true
        tailscale_join_network: false

- name: Setup K3S
  hosts:
    - agent
    - control
  become: true
  # serial: 1
  # become_user: janitor

  roles:
    - role: tailscale
      vars:
        tailscale_install: false
        tailscale_join_network: true
        tailscale_auth_key: "{{ lookup('ansible.builtin.env', 'TAILSCALE_K8S_AUTH_KEY') }}"
      when: 0 > 1
    - role: firewall
      vars:
        firewall_allow_http: false
        firewall_binarylane_k8s_vpc: true
        firewall_allow_local_lan: true
    - role: fix-multipathd
    - role: k3s
      vars:
        k3s_role: "{{ 'agent' if 'agent' in group_names else 'server' }}"
        k3s_control_ip: https://100.66.108.81:6443
        k3s_tailscale_auth_key: "{{ lookup('ansible.builtin.env', 'TAILSCALE_K8S_AUTH_KEY') }}"
        k3s_cluster_token: "{{ lookup('ansible.builtin.env', 'K3S_CLUSTER_TOKEN') }}"

- name: Setup proxy servers
  hosts: proxy
  become: true
  serial: 1
  become_user: janitor

  roles:
    - role: firewall
    - role: tailscale
      vars:
        tailscale_install: false
        tailscale_auth_key: "{{ lookup('ansible.builtin.env', 'TAILSCALE_K8S_AUTH_KEY') }}"
    - role: proxy

- name: Setup uptime monitor
  hosts: uptime
  become: true
  become_user: janitor

  roles:
    - role: firewall
    - role: tailscale
      vars:
        tailscale_install: false
        tailscale_auth_key: "{{ lookup('ansible.builtin.env', 'TAILSCALE_K8S_AUTH_KEY') }}"
        tailscale_extra_args: "--advertise-exit-node"
    - role: docker
    - role: uptime-kuma
