name: infrastructure
on:
  push:
    branches: [ main ]
    paths:
      - cloud/**
      - servers/**
      - .github/workflows/infrastructure.yml

concurrency:
  group: environment-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: "./cloud/terraform"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: hashicorp/setup-terraform@v1.2.1
      with:
        cli_config_credentials_hostname: app.terraform.io
        cli_config_credentials_token: ${{ secrets.tf_token }}
        terraform_version: 1.1.2

    - name: terraform fmt
      run: terraform fmt -recursive

    - name: terraform init
      run: terraform init

    - name: terraform validate
      run: terraform validate

    - name: terraform plan
      run: terraform plan

    - name: terraform apply
      run: terraform apply -auto-approve

  dns:
    needs: terraform
    runs-on: ubuntu-latest

    env:
      CF_API_KEY: ${{ secrets.CF_API_TOKEN }}
    defaults:
      run:
        working-directory: "./cloud/terraform"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: hashicorp/setup-terraform@v1.2.1
      with:
        cli_config_credentials_hostname: app.terraform.io
        cli_config_credentials_token: ${{ secrets.tf_token }}
        terraform_version: 1.1.2
        terraform_wrapper: false
    - run: terraform init

    - uses: actions/setup-node@v2
      with:
        node-version: '16'
    - run: npm install -g cloudflare-cli

    - name: update dns
      run: ../dns.sh

  provision-update-oracle:
    needs: dns
    runs-on: ubuntu-latest
    env:
      INSTANCE_KEY: ${{ secrets.INSTANCE_KEY }}
    defaults:
      run:
        working-directory: "./cloud"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run: "./setup_ubuntu.sh"

  provision-update-rpi:
    needs: dns
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./cloud"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: install/update dependencies
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: 'rpi.anurag.sh'
          username: 'alarm'
          key: ${{ secrets.INSTANCE_KEY }}
          script: |
          sudo pacman -Syu --noconfirm
          sudo pacman -S --noconfirm archlinux-keyring
          sudo pacman -S --noconfirm --needed docker docker-compose rsync wget
          sudo systemctl enable --now docker

  check-file-changes:
    needs:
      - provision-update-oracle
      - provision-update-rpi
    runs-on: ubuntu-latest

    outputs:
      paste-changed: ${{ steps.paste-changed.outputs.changed }}
      files-changed: ${{ steps.files-changed.outputs.changed }}
      rpi-changed: ${{ steps.rpi-changed.outputs.changed }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 2

      - name: Get paste changed files
        id: changed-files-paste
        uses: tj-actions/changed-files@v12.2
        with:
          files: |
            servers/paste
            cloud/deploy_paste.sh
            cloud/terraform
            .github/

      - name: Run step if any of paste files changed
        id: paste-changed
        if: steps.changed-files-paste.outputs.any_changed == 'true' || steps.changed-files-paste.outputs.any_deleted == 'true'
        run: echo "::set-output name=changed::true"

      - name: Get files changed files
        id: changed-files-files
        uses: tj-actions/changed-files@v12.2
        with:
          files: |
            servers/files
            cloud/deploy_files.sh
            cloud/terraform
            .github/

      - name: Run step if any of files files changed
        id: files-changed
        if: steps.changed-files-files.outputs.any_changed == 'true' || steps.changed-files-files.outputs.any_deleted == 'true'
        run: echo "::set-output name=changed::true"

      - name: Get rpi changed files
        id: changed-files-rpi
        uses: tj-actions/changed-files@v12.2
        with:
          files: |
            servers/rpi
            cloud/deploy_rpi.sh
            .github/

      - name: Run step if any of rpi files changed
        id: rpi-changed
        if: steps.changed-files-rpi.outputs.any_changed == 'true' || steps.changed-files-rpi.outputs.any_deleted == 'true'
        run: echo "::set-output name=changed::true"

  deploy-files:
    if: needs.check-file-changes.outputs.files-changed == 'true'
    needs: check-file-changes
    runs-on: ubuntu-latest

    env:
      INSTANCE_KEY: ${{ secrets.INSTANCE_KEY }}
    defaults:
      run:
        working-directory: "./cloud"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run: "./deploy_files.sh"

  deploy-paste:
    if: needs.check-file-changes.outputs.paste-changed == 'true'
    needs: check-file-changes
    runs-on: ubuntu-latest

    env:
      INSTANCE_KEY: ${{ secrets.INSTANCE_KEY }}
    defaults:
      run:
        working-directory: "./cloud"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run: "./deploy_paste.sh"

  deploy-rpi:
    if: needs.check-file-changes.outputs.rpi-changed == 'true'
    needs:
      - check-file-changes
    runs-on: ubuntu-latest

    env:
      INSTANCE_KEY: ${{ secrets.INSTANCE_KEY }}
    defaults:
      run:
        working-directory: "./cloud"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - run: "./deploy_rpi.sh"
