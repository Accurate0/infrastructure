name: Provision Cluster
on:
  push:
    branches: [main]
    paths:
      - cluster/**
      - .github/workflows/cluster-provision.yml
      - .github/workflows/call-terraform.yml

concurrency:
  group: environment-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  terraform:
    uses: ./.github/workflows/call-terraform.yml
    with:
      directory: cluster/terraform
      backend-config: ../../backend-config.tf
      output: true
    secrets: inherit

  playbooks:
    name: run playbooks
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.INSTANCE_KEY }}

      - name: Install ansible
        run: |
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: 1.76.6

      - name: Run playbooks
        env:
          K3S_CLUSTER_TOKEN: ${{ secrets.K3S_CLUSTER_TOKEN }}
          TAILSCALE_K8S_AUTH_KEY: ${{ secrets.TAILSCALE_K8S_AUTH_KEY }}
          K3S_URL: ${{ secrets.K3S_URL }}
        run: |
          cd cluster/ansible

          export ANSIBLE_HOST_KEY_CHECKING=False

          echo "::group::Check connect"
          ansible all -m ping -i inventory.yaml
          echo "::endgroup::"

          echo "::group::Agent playbook"
          ansible-playbook -i inventory.yaml playbooks/agent.yaml
          echo "::endgroup::"

          echo "::group::Control playbook"
          ansible-playbook -i inventory.yaml playbooks/control.yaml
          echo "::endgroup::"

          echo "::group::Proxy playbook"
          ansible-playbook -i inventory.yaml playbooks/proxy.yaml
          echo "::endgroup::"

          echo "::group::Uptime playbook"
          ansible-playbook -i inventory.yaml playbooks/uptime.yaml
          echo "::endgroup::"

  provision:
    name: provision applications
    needs: playbooks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: 1.76.6

      - name: Deploy to k8s
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          if [ ! -d "$HOME/.kube" ]; then
            mkdir -p $HOME/.kube
          fi

          echo -n "$KUBE_CONFIG" | base64 -di > $HOME/.kube/config
          kubectl apply -f cluster/kubernetes
          kubectl apply -f cluster/kubernetes/misc
          kubectl apply -f cluster/kubernetes/gatekeeper-rules
