name: oracle
on:
  push:
    branches: [ main ]
    paths:
      - cloud/**
      - .github/workflows/terraform.yml
      - .github/workflows/oracle.yml
      - servers/oracle1/**
      - servers/oracle2/**

concurrency:
  group: environment-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: false

env:
  USERNAME: ubuntu
  ORACLE1_HOST: oracle1.anurag.sh
  ORACLE2_HOST: oracle2.anurag.sh

jobs:
  provision:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: "./cloud/terraform"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: hashicorp/setup-terraform@v1.2.1
      with:
        cli_config_credentials_hostname: app.terraform.io
        cli_config_credentials_token: ${{ secrets.tf_token }}
        terraform_version: 1.1.2

    - name: terraform fmt
      run: terraform fmt -recursive

    - name: terraform init
      run: terraform init

    - name: terraform validate
      run: terraform validate

    - name: terraform plan
      run: terraform plan

    - name: terraform apply
      run: terraform apply -auto-approve

  dns:
    runs-on: ubuntu-latest
    needs: provision

    env:
      CF_API_KEY: ${{ secrets.CF_API_TOKEN }}
    defaults:
      run:
        working-directory: "./cloud/terraform"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: hashicorp/setup-terraform@v1.2.1
      with:
        cli_config_credentials_hostname: app.terraform.io
        cli_config_credentials_token: ${{ secrets.tf_token }}
        terraform_version: 1.1.2
        terraform_wrapper: false
    - run: terraform init

    - uses: actions/setup-node@v2
      with:
        node-version: '16'
    - run: npm install -g cloudflare-cli

    - name: update dns
      run: ../dns.sh

  update-install:
    runs-on: ubuntu-latest
    needs: dns
    defaults:
      run:
        working-directory: "./cloud"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: install/update dependencies
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ env.ORACLE1_HOST }},${{ env.ORACLE2_HOST }}
          sync: true
          username: ${{ env.USERNAME }}
          key: ${{ secrets.INSTANCE_KEY }}
          script: |
            sudo apt-get update -y
            sudo apt-get install -y \
                ca-certificates \
                curl \
                gnupg \
                lsb-release

            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --no-tty --dearmor --batch -o /usr/share/keyrings/docker-archive-keyring.gpg

            echo \
            "deb [arch=\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
            \$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

            sudo apt-get update -y
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io rsync python3-pip zstd

            sudo systemctl daemon-reload
            sudo systemctl enable --now --no-block docker.service
            sudo usermod -a -G docker ubuntu
            sudo pip install docker-compose

  deploy-oracle1:
    needs: update-install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: deploy
        uses: Burnett01/rsync-deployments@5.2
        with:
          switches: -avz --delete --progress
          remote_path: /home/${{ env.USERNAME }}/
          remote_host: ${{ env.ORACLE1_HOST }}
          remote_user: ${{ env.USERNAME }}
          remote_key: ${{ secrets.INSTANCE_KEY }}
          path: servers/oracle1

      - name: activate deployment
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ env.ORACLE1_HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ secrets.INSTANCE_KEY }}
          script: |
            cd oracle1
            docker-compose up --build -d --remove-orphans
            docker ps

  deploy-oracle2:
    needs: update-install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: deploy
        uses: Burnett01/rsync-deployments@5.2
        with:
          switches: -avz --delete --progress
          remote_path: /home/${{ env.USERNAME }}/servers
          remote_host: ${{ env.ORACLE2_HOST }}
          remote_user: ${{ env.USERNAME }}
          remote_key: ${{ secrets.INSTANCE_KEY }}
          path: servers/oracle2

      - name: activate deployment
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ env.ORACLE2_HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ secrets.INSTANCE_KEY }}
          script: |
            cd servers/oracle2

            pushd certbot
            sudo cp certbot-renewal.* /etc/systemd/system/
            sudo sh -c 'systemctl daemon-reload && systemctl enable --now certbot-renewal.timer'
            popd

            docker network prune -f
            docker-compose up --build -d
            docker ps
