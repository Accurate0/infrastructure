name: call-terraform
on:
  workflow_call:
    inputs:
      directory:
        type: string
        required: true
    secrets:
      TFE_TOKEN:
        required: false
      TF_TOKEN:
        required: false
      ARM_CLIENT_ID:
        required: false
      ARM_CLIENT_SECRET:
        required: false
      ARM_SUBSCRIPTION_ID:
        required: false
      ARM_TENANT_ID:
        required: false
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
      AWS_REGION:
        required: false
      CLOUDFLARE_API_TOKEN:
        required: false
      TF_VAR_cloudflare_zone_id:
        required: false
env:
  TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  TF_VAR_cloudflare_zone_id: ${{ secrets.TF_VAR_cloudflare_zone_id }}

jobs:
  apply:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ inputs.directory }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: hashicorp/setup-terraform@v1.2.1
        with:
          cli_config_credentials_hostname: app.terraform.io
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
          terraform_version: 1.1.2

      - name: terraform fmt
        run: terraform fmt -recursive

      - name: terraform init
        run: terraform init

      - name: terraform validate
        run: terraform validate

      - name: terraform apply
        run: terraform apply -auto-approve
