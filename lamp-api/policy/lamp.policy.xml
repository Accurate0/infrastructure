<policies>
    <inbound>
        <base />
        <set-variable name="endpoint" value="@(context.Request.OriginalUrl.Path.Trim('/').Substring(context.Request.OriginalUrl.Path.LastIndexOf('/')))" />
        <set-variable name="light" value="light.0x001788010381ef5d" />
        <choose>
            <when condition="@(context.Variables.GetValueOrDefault<string>("endpoint").Equals("off"))">
                <rewrite-uri template="/turn_off" />
            </when>
            <when condition="@(context.Variables.GetValueOrDefault<string>("endpoint").Equals("on"))">
                <rewrite-uri template="/turn_on" />
            </when>
            <when condition="@(context.Variables.GetValueOrDefault<string>("endpoint").Equals("state"))">
                <set-backend-service base-url="https://home.anurag.sh/api/states/"/>
                <rewrite-uri template="@(context.Variables.GetValueOrDefault<string>("light"))" />
            </when>
        </choose>
        <set-header name="Authorization" exists-action="override">
            <value>Bearer {{HomeAssistantApiKey}}</value>
        </set-header>
        <set-header name="X-Forwarded-For" exists-action="delete" />
        <choose>
            <when condition="@(context.Variables.GetValueOrDefault<string>("endpoint").Equals("off") || context.Variables.GetValueOrDefault<string>("endpoint").Equals("on"))">
                <set-body>@{
                    var body = new JObject();
                    body.Add(new JProperty("entity_id", context.Variables.GetValueOrDefault<string>("light")));
                    return body.ToString();
                }</set-body>
            </when>
        </choose>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
        <choose>
            <when condition="@(context.Variables.GetValueOrDefault<string>("endpoint").Equals("off") || context.Variables.GetValueOrDefault<string>("endpoint").Equals("on"))">
                <!-- Empty the body on the way out-->
                <set-body></set-body>
            </when>
            <when condition="@(context.Variables.GetValueOrDefault<string>("endpoint").Equals("state"))">
                <set-body>@{
                    var body = context.Response.Body.As<JObject>();
                    var response = new JObject();
                    response.Add(new JProperty("state", body["state"]));
                    return response.ToString();
                }</set-body>
            </when>
        </choose>
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>
